#init gcloud
gcloud init
#click connect on your cluster to get the command to connect kubectl to it
# deploy webui
kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml

#web ui
127.0.0.1:8001/ui


#create secret
kubectl create secret docker-registry my-secret --docker-server=docker.io --docker-username=USERNAME --docker-password=THEPASSWORD --docker-email=EMAIL


# create stuff
kubectl create -f rc_file_name
kubectl create -f deployment_file_name

# expose deployment on external ip
kubectl expose deployment SERVICENAME-deploy --type=LoadBalancer --name=SERVICENAME-deploy

# run command inside pod
kubectl exec PODNAME -- bash -c 'curl -XGET SERVICENAME-deploy'

#update something
kubectl apply -f filename.json

#scale up or down
kubectl scale -f filename.json --replicas=2


#enable autocomplete
echo "source <(kubectl completion bash)" >> ~/.bashrc

#create secret generic
kubectl create secret generic mysql-pass --from-literal=password=YOUR_PASSWORD

#import mysql db
kubectl exec -i MYSQLPODNAME -- mysql -u user -p'password' dbname < local_file_name

#migrate elasticsearch index to the kubernetes elasticsearch cluster
kubectl cp /usr/share/elasticsearch/data/nodes/0/indices/ default/ELASTICSEARCHPODNAME:/usr/share/elasticsearch/data/nodes/0/indices/
#chown the files to make them for elasticsearch, and then delete the pod
kubectl exec -i ELASTICSEARCHPODNAME -- chown -R elasticsearch:root /usr/share/elasticsearch/data/nodes/0/indices/
kubectl delete pod ELASTICSEARCHPODNAME


#status
kubectl get nodes --no-headers | awk '{print $1}' | xargs -I {} sh -c 'echo {}; kubectl describe node {} | grep Allocated -A 5 | grep -ve Event -ve Allocated -ve percent -ve -- ; echo'
kubectl top pod --all-namespaces
